<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>info.ejava.examples.svc.container</groupId>
        <artifactId>svc-container</artifactId>
        <version>6.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>docker-hello-example</artifactId>
    <name>Services::Container::Docker Hello Example</name>
    <description>
        This project provides a demonstration of implementing a
        simple Docker image.
    </description>

    <properties>
        <layered>false</layered>
        <!-- not using build-helper dynamic port#, hardcode for failsafe to use -->
        <heroku.appName>ejava-boot</heroku.appName>
        <server.http.port>443</server.http.port>
        <!--don't eagerly run IT test, make builder ask for it since it externally deploys to Heroku -->
        <skipITs>true</skipITs>

        <spring-boot.repackage.skip>false</spring-boot.repackage.skip>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
        </dependency>
        <dependency>
            <groupId>info.ejava.examples.common</groupId>
            <artifactId>ejava-web-util</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <testResources> <!-- used to replace ${variables} in property files -->
            <testResource>
                <directory>src/test/resources</directory>
                <includes> <!-- replace ${heroku.appName} -->
                    <include>application-heroku.properties</include>
                </includes>
                <filtering>true</filtering>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
                <excludes>
                    <exclude>application-heroku.properties</exclude>
                </excludes>
                <filtering>false</filtering>
            </testResource>
        </testResources>

        <plugins>
            <plugin> <!-- builds a Spring Boot Executable JAR - potentially with layering -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <!-- used for remote debugging
                    <excludeDevtools>false</excludeDevtools>
                    -->
                    <layers>
                        <enabled>${layered}</enabled>
                    </layers>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.heroku.sdk</groupId>
                <artifactId>heroku-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile> <!-- deploys a Spring Boot Executable JAR -->
            <id>heroku-it-deploy</id>
            <activation>
                <property>
                    <name>skipITs</name>
                    <value>false</value>
                </property>
            </activation>
            <properties>
                <spring-boot.repackage.skip>false</spring-boot.repackage.skip>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.heroku.sdk</groupId>
                        <artifactId>heroku-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>deploy</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>deploy</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
